<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Nodejs基础</title>
    <link href="/2022/11/09/Nodejs%E5%9F%BA%E7%A1%80/"/>
    <url>/2022/11/09/Nodejs%E5%9F%BA%E7%A1%80/</url>
    
    <content type="html"><![CDATA[<h2 id="初识-Nodejs"><a href="#初识-Nodejs" class="headerlink" title="初识 Nodejs"></a>初识 Nodejs</h2><p><span style="margin-left: 2em" /><a href="https://nodejs.org/zh-cn/">Node.js</a> 是一个基于 Chrome V8 引擎的 JavaScript 运行环境。 Node.js 作为一个 JavaScript 的运行环境只仅仅提供了基础的功能和 API，但基于这些基础功能，很多强大的工具和框架应运而生，学会了 Node.js，前端程序员能胜任更多的工作和岗位：</p><blockquote><ul><li>基于 <a href="http://www.expressjs.com.cn/">Express</a> 框架，可以快速构建 Web 应用</li><li>基于 <a href="https://electronjs.org/">Electron</a> 框架，可以构建跨平台的桌面应用</li><li>基于 <a href="http://restify.com/">restify</a> 框架，可以快速构建 API 接口项目</li><li>读写操作数据库、创建使用的命令行工具辅助前端开发、etc…</li></ul></blockquote><span id="more"></span><h2 id="Node-js-学习目标"><a href="#Node-js-学习目标" class="headerlink" title="Node.js 学习目标"></a>Node.js 学习目标</h2><blockquote><ul><li>JavaScript 基础语法</li><li>Node.js 内置 API 模块（fs、path、http 等）</li><li>第三方 API 模块（express、mysql 等）</li></ul></blockquote><h2 id="一、fs-文件系统模块"><a href="#一、fs-文件系统模块" class="headerlink" title="一、fs 文件系统模块"></a>一、fs 文件系统模块</h2><p><span style="margin-left: 2em" />fs 模块是 Node.js 官方提供的、用来操作文件的模块。它提供了一系列的方法和属性，用来满足用户对文件的操作需求。</p><h3 id="1-引入-fs"><a href="#1-引入-fs" class="headerlink" title="1. 引入 fs"></a>1. 引入 fs</h3><p>如果要在 JavaScript 代码中，使用 fs 模块来操作文件，则需要使用如下的方式先导入它：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> fs = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;fs&#x27;</span>) <br></code></pre></td></tr></table></figure><h3 id="2-读取文件"><a href="#2-读取文件" class="headerlink" title="2. 读取文件"></a>2. 读取文件</h3><h4 id="2-1-fs-readFile-的语法格式"><a href="#2-1-fs-readFile-的语法格式" class="headerlink" title="2.1 fs.readFile() 的语法格式"></a>2.1 fs.readFile() 的语法格式</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">fs.<span class="hljs-title function_">readFile</span>(path[, option], callback)<br></code></pre></td></tr></table></figure><ul><li>参数1：必选参数，字符串，表示文件的路径。</li><li>参数2：可选参数，表示以什么编码格式来读取文件。</li><li>参数3：必选参数，文件读取完成后，通过回调函数拿到读取的结果</li></ul><h4 id="2-2-代码示例"><a href="#2-2-代码示例" class="headerlink" title="2.2 代码示例"></a>2.2 代码示例</h4><p><span style="margin-left: 2em" />以 utf8 的编码格式，读取指定文件的内容,并可以通过判断 err 对象是否为 null，得知文件是否读取成功。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> fs = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;fs&#x27;</span>)<br>fs.<span class="hljs-title function_">readFile</span>(<span class="hljs-string">&#x27;./file/test.txt&#x27;</span>, <span class="hljs-string">&#x27;utf8&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params">err, result</span>)&#123;<br>    <span class="hljs-keyword">if</span>(err)&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;文件读取失败！&#x27;</span> + err.<span class="hljs-property">message</span>)<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;文件读取成功，内容是：&#x27;</span> + result)<br>    &#125;<br>&#125;)<br></code></pre></td></tr></table></figure><h4 id="3-写入文件"><a href="#3-写入文件" class="headerlink" title="3. 写入文件"></a>3. 写入文件</h4>]]></content>
    
    
    <categories>
      
      <category>Nodejs</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Nodejs</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/11/01/hello-world/"/>
    <url>/2022/11/01/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
